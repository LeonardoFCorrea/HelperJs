Como Reflect.apply funciona? O primeiro parâmetro é o método ou função que desejamos invocar. O segundo parâmetro é o 
contexto que o método ou função adotará, ou seja, o valor que será assumido pelo this. Por fim, o último parâmetro é um 
array que contém todos os parâmetros que o método passado como primeiro parâmetro receberá. Como ele não recebe parâmetro 
nenhum, passamos um array vazio.


//Exemplo

  //Objetos

    let objeto1 = {

        nome: 'Bob'
    };

    let objeto2 = {

        nome: 'Leo'
    }

  //Função que exibe o valor nome dos objetos

    function exibeNome() {

        alert(this.nome);
    }

  //Exibição dos objetos

    Reflect.apply(exibeNome, objeto1, []); // exibe 'Bob'

    Reflect.apply(exibeNome, objeto2, []); // exibe 'Leo'


  //Alterando função para receber dois parâmetros. O primeiro será um prefixo que será adicionando no nome e 
    o último um sufixo:

    function exibeNome(prefixo, sufixo) {

        alert(prefixo + this.nome + sufixo);
    }

  //Chamando o método através de Reflect.apply:

    Reflect.apply(exibeNome, objeto1, ['(', ')']); // exibe '(Bob)'

