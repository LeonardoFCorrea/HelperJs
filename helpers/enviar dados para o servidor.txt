//Será realizado uma requisição do tipo "POST" para enviar dados para o servidor. Deve-se ficar atento com a volatilidade 
  dos dados cadastrados, isto é, se reiniciar o servidor, será perdido os dados enviados. Aliás, não há problema nenhum 
  nisso, porque a ideia é focar o código no lado do cliente, ou seja, código JavaScript e não código do back-end.

//Para conseguir realizar uma requisição do tipo POST precisa:
  
//HTTP POST para /negociacoes;
//Usar o cabeçalho Content-type sendo application/json;
//No body um JSON da negociação.

//HTML Básico para o teste

  <!-- aluraframe/client/post.html -->
<html>
<head>
    <meta charset="UTF-8">
    <title>Negociações</title>
    <link rel="stylesheet" href="css/bootstrap.css">
    <link rel="stylesheet" href="css/bootstrap-theme.css">
</head>

<body class="container">
    <form class="form">

        <div class="form-group">
            <label for="data">Data</label>
            <input type="date" id="data" class="form-control" required autofocus/>        
        </div>    

        <div class="form-group">
            <label for="quantidade">Quantidade</label>
            <input type="number" min="1" step="1" id="quantidade" class="form-control" value="1" required/>
        </div>

        <div class="form-group">
            <label for="valor">Valor</label>
            <input id="valor" type="number" class="form-control"  min="0.01" step="0.01" value="0.0" required />
        </div>

        <button class="btn btn-primary" type="submit" onclick="sendPost(event)">Enviar dados para servidor</button>
    </form>

    <script>

        function sendPost(event) {

            event.preventDefault();
            console.log("Enviando post");

            //aqui você deve ler os dados do formulário
            //construir o json
            //enviar o XMLHttpRequest
        }
    </script>
</body>
</html>

//O código é bem simplório e não aproveita toda a estrutura MVC, mas vale para conhecer melhor o objeto XMLHttpRequest.

  <!-- aluraframe/client/post.html -->
<!-- código anterior omitido -->
    <script>
        function sendPost(event) {

            event.preventDefault();

            console.log("Enviando post");

            const $ = document.querySelector.bind(document);
            const inputData = $('#data');
            const inputQuantidade = $('#quantidade');
            const inputValor = $('#valor');

            const negociacao = {
                data: inputData.value,
                quantidade: inputQuantidade.value,
                valor: inputValor.value
            };

            const xhr = new XMLHttpRequest();
            xhr.open("POST", "/negociacoes", true);
            xhr.setRequestHeader("Content-type", "application/json");

            xhr.onreadystatechange = () => {

                if (xhr.readyState == 4) {

                    if (xhr.status == 200) {
                        inputData.value = '';
                        inputQuantidade.value = 1;
                        inputValor.value = 0.0;
                        inputData.focus();
                        alert('Negociação enviada com sucesso');
                    } else {
                        alert(`Não foi possível enviar a negociação: ${xhr.responseText}`);
                    }
                }
            }
            xhr.send(JSON.stringify(negociacao));

    }
    </script>
<!-- código posterior omitido -->

//não pode enviar o objeto negociacao diretamente, precisa convertê-lo para string, porque no protocolo HTTP os dados são 
  transmitidos no formato texto. Foi feito o contrário de quando recebemos os dados vindos do servidor. Lá, converte-se 
  string em objeto.
