//classe

  class Funcionario {

      constructor(email) {
          this._email = email;
      }

      get email() {
          return this._email;
      }

      set email(email) {
          this._email = email;
      }
  }

//Proxy que exiba no console o valor da propriedade antes de ela ser alterada e o valor novo. Inclusive, exibir também o 
  nome da propriedade que está sendo modificada.

  let funcionario= new Proxy(new Funcionario('abc@abc.com'),  {

    set(target, prop, value, receiver) {
        console.log(prop); // imprimindo a propriedade que está sendo alterada
        console.log(`Valor antigo ${target[prop]}, valor atual: ${value}`);
        return Reflect.set(target, prop, value, receiver);
    }
});

  funcionario.email = 'aaa@aaa.com';

//Percebe-se que é usado o set no handler passado para o proxy. Além disso, deve ter muito cuidado que quando se usa set,
  a função deve receber quatro parâmetros e não três, como no caso do get.

  

Reparou que a mensagem do proxy é exibida duas vezes? É que email é um setter. Nosso proxy irá executar seu código quando o setter for chamado e também para a propriedade _email, que é modificada pelo setter.

